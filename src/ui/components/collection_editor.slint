import { ReadingThemes } from "../styles/reading_themes.slint";
import { ThemedButton } from "../styles/themes.slint";

export struct SmartRuleData {
    field: string,
    operator: string,
    value: string,
}

export struct CollectionEditorData {
    id: string,
    name: string,
    description: string,
    icon: string,
    color: string,
    is_smart: bool,
    smart_rules: [SmartRuleData],
    match_type: string, // "all" or "any"
}

export component CollectionEditor inherits Rectangle {
    in property <bool> visible: false;
    in property <CollectionEditorData> collection_data: {
        id: "",
        name: "",
        description: "",
        icon: "üìÇ",
        color: "#007AFF",
        is_smart: false,
        smart_rules: [],
        match_type: "all",
    };
    in property <bool> is_edit_mode: false;
    
    // Available options
    in property <[string]> available_icons: ["üìÇ", "üìö", "‚≠ê", "üéØ", "üí°", "üìñ", "üèÜ", "üé®", "üî•", "üíé", "üåü", "üé™", "üéµ", "üé¨", "üéÆ", "üèÉ", "üçé", "üå∏", "üåä", "üèîÔ∏è"];
    in property <[string]> available_colors: ["#007AFF", "#FF6B6B", "#4ECDC4", "#45B7D1", "#F9CA24", "#6C5CE7", "#FD79A8", "#636E72", "#00B894", "#FDCB6E", "#E17055", "#74B9FF", "#A29BFE", "#FD79A8", "#FDCB6E"];
    in property <[string]> rule_fields: ["Title", "Author", "Genre", "Publisher", "Language", "Publish Date", "Added Date", "Reading Status", "Rating", "Tags", "File Size", "Page Count", "Progress"];
    in property <[string]> rule_operators: ["equals", "does not equal", "contains", "does not contain", "starts with", "ends with", "greater than", "less than", "is empty", "is not empty"];
    
    callback save_collection(CollectionEditorData);
    callback cancel_edit();
    callback add_smart_rule();
    callback remove_smart_rule(int);
    callback preview_smart_collection();
    
    // Modal overlay
    background: rgba(0, 0, 0, 0.5);
    
    // Center the dialog
    dialog := Rectangle {
        width: 600px;
        height: visible ? (collection_data.is_smart ? 700px : 500px) : 0px;
        background: ReadingThemes.background-color;
        border-radius: 12px;
        border-width: 1px;
        border-color: ReadingThemes.border-color;
        drop-shadow-blur: 20px;
        drop-shadow-color: ReadingThemes.shadow-strong;
        drop-shadow-offset-y: 10px;
        
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        
        animate height {
            duration: 300ms;
            easing: ease-in-out;
        }
        
        VerticalLayout {
            // Header
            header := Rectangle {
                height: 60px;
                background: ReadingThemes.header-color;
                border-radius: 12px 12px 0px 0px;
                border-width: 0px 0px 1px 0px;
                border-color: ReadingThemes.border-color;
                
                HorizontalLayout {
                    padding: 16px;
                    spacing: 12px;
                    alignment: center;
                    
                    Text {
                        text: is-edit-mode ? "Edit Collection" : "Create Collection";
                        font-size: 18px;
                        font-weight: 600;
                        color: ReadingThemes.text-color;
                        horizontal-stretch: 1;
                    }
                    
                    // Close button
                    close-btn := Rectangle {
                        width: 28px;
                        height: 28px;
                        background: close-area.has-hover ? ReadingThemes.accent-color : transparent;
                        border-radius: 14px;
                        
                        Text {
                            text: "√ó";
                            font-size: 16px;
                            color: close-area.has-hover ? #FFFFFF : ReadingThemes.text-color;
                            horizontal-alignment: center;
                            vertical-alignment: center;
                        }
                        
                        close-area := TouchArea {
                            clicked => {
                                root.cancel-edit();
                            }
                            mouse-cursor: pointer;
                        }
                        
                        animate background {
                            duration: 150ms;
                            easing: ease-out;
                        }
                    }
                }
            }
            
            // Content
            content := ScrollView {
                VerticalLayout {
                    padding: 20px;
                    spacing: 20px;
                    
                    // Basic information
                    basic-info := VerticalLayout {
                        spacing: 12px;
                        
                        // Name field
                        name-field := VerticalLayout {
                            spacing: 6px;
                            
                            Text {
                                text: "Collection Name";
                                font-size: 14px;
                                font-weight: 600;
                                color: ReadingThemes.text-color;
                            }
                            
                            name-input := Rectangle {
                                height: 36px;
                                background: ReadingThemes.surface;
                                border-width: 1px;
                                border-color: ReadingThemes.border-color;
                                border-radius: 6px;
                                
                                HorizontalLayout {
                                    padding: 8px;
                                    
                                    name-text-input := TextInput {
                                        text: collection-data.name;
                                        placeholder_text: "Enter collection name...";
                                        font-size: 14px;
                                        color: ReadingThemes.text-color;
                                        horizontal-stretch: 1;
                                    }
                                }
                            }
                        }
                        
                        // Description field
                        description-field := VerticalLayout {
                            spacing: 6px;
                            
                            Text {
                                text: "Description (optional)";
                                font-size: 14px;
                                font-weight: 600;
                                color: ReadingThemes.text-color;
                            }
                            
                            description-input := Rectangle {
                                height: 60px;
                                background: ReadingThemes.surface;
                                border-width: 1px;
                                border-color: ReadingThemes.border-color;
                                border-radius: 6px;
                                
                                VerticalLayout {
                                    padding: 8px;
                                    
                                    description-text-input := TextInput {
                                        text: collection-data.description;
                                        placeholder_text: "Enter description...";
                                        font-size: 14px;
                                        color: ReadingThemes.text-color;
                                        wrap: word-wrap;
                                        vertical-stretch: 1;
                                    }
                                }
                            }
                        }
                        
                        // Icon and color selection
                        appearance := HorizontalLayout {
                            spacing: 20px;
                            
                            // Icon selection
                            icon-selection := VerticalLayout {
                                spacing: 6px;
                                
                                Text {
                                    text: "Icon";
                                    font-size: 14px;
                                    font-weight: 600;
                                    color: ReadingThemes.text-color;
                                }
                                
                                icon-grid := Rectangle {
                                    height: 120px;
                                    background: ReadingThemes.surface;
                                    border-width: 1px;
                                    border-color: ReadingThemes.border-color;
                                    border-radius: 6px;
                                    
                                    ScrollView {
                                        VerticalLayout {
                                            padding: 8px;
                                            spacing: 4px;
                                            
                                            // Grid of icons (5 per row)
                                            for row in 0..4: HorizontalLayout {
                                                spacing: 4px;
                                                
                                                for col in 0..5: if row * 5 + col < available-icons.length: icon-option := Rectangle {
                                                    width: 32px;
                                                    height: 32px;
                                                    background: collection-data.icon == available-icons[row * 5 + col] ? ReadingThemes.accent-color : 
                                                               (icon-option-area.has-hover ? ReadingThemes.hover-background : transparent);
                                                    border-radius: 6px;
                                                    
                                                    Text {
                                                        text: available-icons[row * 5 + col];
                                                        font-size: 16px;
                                                        horizontal-alignment: center;
                                                        vertical-alignment: center;
                                                    }
                                                    
                                                    icon-option-area := TouchArea {
                                                        clicked => {
                                                            collection-data.icon = available-icons[row * 5 + col];
                                                        }
                                                        mouse-cursor: pointer;
                                                    }
                                                    
                                                    animate background {
                                                        duration: 150ms;
                                                        easing: ease-out;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            
                            // Color selection
                            color-selection := VerticalLayout {
                                spacing: 6px;
                                
                                Text {
                                    text: "Color";
                                    font-size: 14px;
                                    font-weight: 600;
                                    color: ReadingThemes.text-color;
                                }
                                
                                color-grid := Rectangle {
                                    height: 120px;
                                    background: ReadingThemes.surface;
                                    border-width: 1px;
                                    border-color: ReadingThemes.border-color;
                                    border-radius: 6px;
                                    
                                    ScrollView {
                                        VerticalLayout {
                                            padding: 8px;
                                            spacing: 4px;
                                            
                                            // Grid of colors (5 per row)
                                            for row in 0..3: HorizontalLayout {
                                                spacing: 4px;
                                                
                                                for col in 0..5: if row * 5 + col < available-colors.length: color-option := Rectangle {
                                                    width: 32px;
                                                    height: 32px;
                                                    background: available-colors[row * 5 + col];
                                                    border-radius: 6px;
                                                    border-width: collection-data.color == available-colors[row * 5 + col] ? 3px : 1px;
                                                    border-color: collection-data.color == available-colors[row * 5 + col] ? ReadingThemes.accent-color : ReadingThemes.border-color;
                                                    
                                                    color-option-area := TouchArea {
                                                        clicked => {
                                                            collection-data.color = available-colors[row * 5 + col];
                                                        }
                                                        mouse-cursor: pointer;
                                                    }
                                                    
                                                    animate border-width {
                                                        duration: 150ms;
                                                        easing: ease-out;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        // Smart collection toggle
                        smart-toggle := HorizontalLayout {
                            spacing: 12px;
                            alignment: center;
                            
                            smart-checkbox := Rectangle {
                                width: 20px;
                                height: 20px;
                                background: collection-data.is-smart ? ReadingThemes.accent-color : ReadingThemes.surface;
                                border-width: 1px;
                                border-color: ReadingThemes.border-color;
                                border-radius: 4px;
                                
                                if collection-data.is-smart: Text {
                                    text: "‚úì";
                                    font-size: 12px;
                                    color: #FFFFFF;
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                }
                                
                                smart-checkbox-area := TouchArea {
                                    clicked => {
                                        collection-data.is-smart = !collection-data.is-smart;
                                    }
                                    mouse-cursor: pointer;
                                }
                                
                                animate background {
                                    duration: 150ms;
                                    easing: ease-out;
                                }
                            }
                            
                            VerticalLayout {
                                spacing: 2px;
                                
                                Text {
                                    text: "Smart Collection";
                                    font-size: 14px;
                                    font-weight: 600;
                                    color: ReadingThemes.text-color;
                                }
                                
                                Text {
                                    text: "Automatically add books based on rules";
                                    font-size: 12px;
                                    color: ReadingThemes.text-secondary;
                                }
                            }
                            
                            Rectangle {
                                horizontal-stretch: 1;
                            }
                        }
                    }
                    
                    // Smart collection rules (only visible when smart collection is enabled)
                    if collection-data.is-smart: smart-rules := VerticalLayout {
                        spacing: 12px;
                        
                        // Match type selection
                        match-type := VerticalLayout {
                            spacing: 6px;
                            
                            Text {
                                text: "Match Type";
                                font-size: 14px;
                                font-weight: 600;
                                color: ReadingThemes.text-color;
                            }
                            
                            match-type-selection := HorizontalLayout {
                                spacing: 8px;
                                
                                all-option := Rectangle {
                                    width: 80px;
                                    height: 32px;
                                    background: collection-data.match-type == "all" ? ReadingThemes.accent-color : ReadingThemes.surface;
                                    border-radius: 6px;
                                    border-width: 1px;
                                    border-color: ReadingThemes.border-color;
                                    
                                    Text {
                                        text: "All";
                                        font-size: 12px;
                                        color: collection-data.match-type == "all" ? #FFFFFF : ReadingThemes.text-color;
                                        horizontal-alignment: center;
                                        vertical-alignment: center;
                                    }
                                    
                                    all-option-area := TouchArea {
                                        clicked => {
                                            collection-data.match-type = "all";
                                        }
                                        mouse-cursor: pointer;
                                    }
                                    
                                    animate background {
                                        duration: 150ms;
                                        easing: ease-out;
                                    }
                                }
                                
                                any-option := Rectangle {
                                    width: 80px;
                                    height: 32px;
                                    background: collection-data.match-type == "any" ? ReadingThemes.accent-color : ReadingThemes.surface;
                                    border-radius: 6px;
                                    border-width: 1px;
                                    border-color: ReadingThemes.border-color;
                                    
                                    Text {
                                        text: "Any";
                                        font-size: 12px;
                                        color: collection-data.match-type == "any" ? #FFFFFF : ReadingThemes.text-color;
                                        horizontal-alignment: center;
                                        vertical-alignment: center;
                                    }
                                    
                                    any-option-area := TouchArea {
                                        clicked => {
                                            collection-data.match-type = "any";
                                        }
                                        mouse-cursor: pointer;
                                    }
                                    
                                    animate background {
                                        duration: 150ms;
                                        easing: ease-out;
                                    }
                                }
                                
                                Rectangle {
                                    horizontal-stretch: 1;
                                }
                            }
                        }
                        
                        // Rules list
                        rules-header := HorizontalLayout {
                            spacing: 8px;
                            alignment: center;
                            
                            Text {
                                text: "Rules";
                                font-size: 14px;
                                font-weight: 600;
                                color: ReadingThemes.text-color;
                            }
                            
                            Rectangle {
                                horizontal-stretch: 1;
                            }
                            
                            // Add rule button
                            add-rule-btn := Rectangle {
                                width: 80px;
                                height: 28px;
                                background: add-rule-area.has-hover ? ReadingThemes.accent-color : ReadingThemes.surface;
                                border-radius: 6px;
                                border-width: 1px;
                                border-color: ReadingThemes.border-color;
                                
                                HorizontalLayout {
                                    spacing: 4px;
                                    alignment: center;
                                    
                                    Text {
                                        text: "+";
                                        font-size: 14px;
                                        color: add-rule-area.has-hover ? #FFFFFF : ReadingThemes.text-color;
                                    }
                                    
                                    Text {
                                        text: "Add Rule";
                                        font-size: 11px;
                                        color: add-rule-area.has-hover ? #FFFFFF : ReadingThemes.text-color;
                                    }
                                }
                                
                                add-rule-area := TouchArea {
                                    clicked => {
                                        root.add-smart-rule();
                                    }
                                    mouse-cursor: pointer;
                                }
                                
                                animate background {
                                    duration: 150ms;
                                    easing: ease-out;
                                }
                            }
                        }
                        
                        // Rules list
                        rules-list := VerticalLayout {
                            spacing: 8px;
                            
                            for rule[i] in collection-data.smart-rules: SmartRuleEditor {
                                rule-data: rule;
                                rule-index: i;
                                available-fields: rule-fields;
                                available-operators: rule-operators;
                                
                                delete-requested => {
                                    root.remove-smart-rule(i);
                                }
                            }
                            
                            // Empty state
                            if collection-data.smart-rules.length == 0: empty-rules := Rectangle {
                                height: 60px;
                                background: ReadingThemes.surface;
                                border-radius: 6px;
                                border-width: 1px;
                                border-color: ReadingThemes.border-color;
                                
                                Text {
                                    text: "No rules added yet. Click 'Add Rule' to get started.";
                                    font-size: 12px;
                                    color: ReadingThemes.text-secondary;
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                    font-style: italic;
                                }
                            }
                        }
                        
                        // Preview button
                        if collection-data.smart-rules.length > 0: preview-btn := Rectangle {
                            height: 32px;
                            background: preview-area.has-hover ? ReadingThemes.accent-color : ReadingThemes.surface;
                            border-radius: 6px;
                            border-width: 1px;
                            border-color: ReadingThemes.border-color;
                            
                            Text {
                                text: "Preview Results";
                                font-size: 12px;
                                color: preview-area.has-hover ? #FFFFFF : ReadingThemes.text-color;
                                horizontal-alignment: center;
                                vertical-alignment: center;
                            }
                            
                            preview-area := TouchArea {
                                clicked => {
                                    root.preview-smart-collection();
                                }
                                mouse-cursor: pointer;
                            }
                            
                            animate background {
                                duration: 150ms;
                                easing: ease-out;
                            }
                        }
                    }
                }
            }
            
            // Footer with action buttons
            footer := Rectangle {
                height: 60px;
                background: ReadingThemes.surface;
                border-radius: 0px 0px 12px 12px;
                border-width: 1px 0px 0px 0px;
                border-color: ReadingThemes.border-color;
                
                HorizontalLayout {
                    padding: 16px;
                    spacing: 12px;
                    alignment: center;
                    
                    Rectangle {
                        horizontal-stretch: 1;
                    }
                    
                    // Cancel button
                    cancel-btn := ThemedButton {
                        text: "Cancel";
                        
                        clicked => {
                            root.cancel-edit();
                        }
                    }
                    
                    // Save button
                    save-btn := ThemedButton {
                        text: is-edit-mode ? "Update" : "Create";
                        
                        clicked => {
                            // Update collection data with current values
                            collection-data.name = name-text-input.text;
                            collection-data.description = description-text-input.text;
                            root.save-collection(collection-data);
                        }
                    }
                }
            }
        }
    }
}

// Smart rule editor component
component SmartRuleEditor inherits Rectangle {
    in property <SmartRuleData> rule-data;
    in property <int> rule-index;
    in property <[string]> available-fields;
    in property <[string]> available-operators;
    
    callback delete-requested();
    
    height: 40px;
    background: ReadingThemes.surface;
    border-radius: 6px;
    border-width: 1px;
    border-color: ReadingThemes.border-color;
    
    HorizontalLayout {
        padding: 8px;
        spacing: 8px;
        alignment: center;
        
        // Field dropdown
        field-dropdown := Rectangle {
            width: 120px;
            height: 28px;
            background: ReadingThemes.background-color;
            border-radius: 4px;
            border-width: 1px;
            border-color: ReadingThemes.border-color;
            
            Text {
                text: rule-data.field;
                font-size: 11px;
                color: ReadingThemes.text-color;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
            
            field-dropdown-area := TouchArea {
                clicked => {
                    // TODO: Implement dropdown
                }
                mouse-cursor: pointer;
            }
        }
        
        // Operator dropdown
        operator-dropdown := Rectangle {
            width: 120px;
            height: 28px;
            background: ReadingThemes.background-color;
            border-radius: 4px;
            border-width: 1px;
            border-color: ReadingThemes.border-color;
            
            Text {
                text: rule-data.operator;
                font-size: 11px;
                color: ReadingThemes.text-color;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
            
            operator-dropdown-area := TouchArea {
                clicked => {
                    // TODO: Implement dropdown
                }
                mouse-cursor: pointer;
            }
        }
        
        // Value input
        value-input := Rectangle {
            horizontal-stretch: 1;
            height: 28px;
            background: ReadingThemes.background-color;
            border-radius: 4px;
            border-width: 1px;
            border-color: ReadingThemes.border-color;
            
            HorizontalLayout {
                padding: 4px;
                
                value-text-input := TextInput {
                    text: rule-data.value;
                    placeholder_text: "Enter value...";
                    font-size: 11px;
                    color: ReadingThemes.text-color;
                    horizontal-stretch: 1;
                }
            }
        }
        
        // Delete button
        delete-btn := Rectangle {
            width: 24px;
            height: 24px;
            background: delete-area.has-hover ? #FF6B6B : transparent;
            border-radius: 12px;
            
            Text {
                text: "√ó";
                font-size: 14px;
                color: delete-area.has-hover ? #FFFFFF : ReadingThemes.text-tertiary;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
            
            delete-area := TouchArea {
                clicked => {
                    root.delete-requested();
                }
                mouse-cursor: pointer;
            }
            
            animate background {
                duration: 150ms;
                easing: ease-out;
            }
        }
    }
}