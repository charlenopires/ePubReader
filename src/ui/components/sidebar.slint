import { ReadingThemes } from "../styles/reading_themes.slint";
import { ThemedButton } from "../styles/themes.slint";

export struct CategoryItem {
    id: string,
    name: string,
    icon: string,
    count: int,
    color: string,
    is_expanded: bool,
    is_favorite: bool,
    category_type: string, // "status", "collection", "author", "tag", "genre"
}

export struct CollectionItem {
    id: string,
    name: string,
    icon: string,
    color: string,
    count: int,
    is_smart: bool,
    is_favorite: bool,
    description: string,
}

export struct AuthorItem {
    id: string,
    name: string,
    count: int,
    is_favorite: bool,
}

export struct TagItem {
    id: string,
    name: string,
    color: string,
    count: int,
}

export struct LibraryStats {
    total_books: int,
    want_to_read: int,
    currently_reading: int,
    finished: int,
    total_collections: int,
    total_authors: int,
    total_tags: int,
}

export component Sidebar inherits Rectangle {
    in property <bool> expanded: true;
    in-out property <string> selected_category: "all";
    in property <LibraryStats> stats: {
        total_books: 0,
        want_to_read: 0,
        currently_reading: 0,
        finished: 0,
        total_collections: 0,
        total_authors: 0,
        total_tags: 0,
    };
    in property <[CollectionItem]> collections: [];
    in property <[AuthorItem]> authors: [];
    in property <[TagItem]> tags: [];
    in property <bool> collections_expanded: true;
    in property <bool> authors_expanded: false;
    in property <bool> tags_expanded: false;
    in property <string> search_query: "";
    
    // Callbacks
    callback category_selected(string);
    callback collection_selected(string);
    callback author_selected(string);
    callback tag_selected(string);
    callback create_collection();
    callback edit_collection(string);
    callback delete_collection(string);
    callback toggle_collection_favorite(string);
    callback search_changed(string);
    callback toggle_section(string);
    
    // Sidebar dimensions
    width: expanded ? 300px : 60px;
    height: parent.height;
    
    background: ReadingThemes.sidebar-background;
    border-width: 0px 1px 0px 0px;
    border-color: ReadingThemes.border-color;
    
    // Smooth expand/collapse animation
    animate width {
        duration: 300ms;
        easing: ease-in-out;
    }
    
    VerticalLayout {
        // Header with toggle button
        header := Rectangle {
            height: 60px;
            background: ReadingThemes.header-color;
            border-width: 0px 0px 1px 0px;
            border-color: ReadingThemes.border-color;
            
            HorizontalLayout {
                padding: 12px;
                spacing: 12px;
                alignment: center;
                
                // Toggle button
                toggle-btn := Rectangle {
                    width: 36px;
                    height: 36px;
                    background: toggle-area.has-hover ? ReadingThemes.hover-background : transparent;
                    border-radius: 18px;
                    
                    Text {
                        text: expanded ? "◀" : "▶";
                        font-size: 16px;
                        color: ReadingThemes.text-color;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                    
                    toggle-area := TouchArea {
                        clicked => {
                            root.expanded = !root.expanded;
                        }
                        mouse-cursor: pointer;
                    }
                    
                    animate background {
                        duration: 150ms;
                        easing: ease-out;
                    }
                }
                
                // Title (only visible when expanded)
                if expanded: title := Text {
                    text: "Library";
                    font-size: 18px;
                    font-weight: 600;
                    color: ReadingThemes.text-color;
                    horizontal-stretch: 1;
                }
            }
        }
        
        // Content area
        if expanded: content := ScrollView {
            VerticalLayout {
                padding: 12px;
                spacing: 8px;
                
                // Search box
                search-box := Rectangle {
                    height: 36px;
                    background: ReadingThemes.surface;
                    border-width: 1px;
                    border-color: ReadingThemes.border-color;
                    border-radius: 6px;
                    
                    HorizontalLayout {
                        padding: 8px;
                        spacing: 8px;
                        alignment: center;
                        
                        Text {
                            text: "🔍";
                            font-size: 14px;
                            color: ReadingThemes.text-secondary;
                        }
                        
                        search-input := TextInput {
                            text: root.search-query;
                            placeholder_text: "Search library...";
                            font-size: 14px;
                            color: ReadingThemes.text-color;
                            horizontal-stretch: 1;
                            
                            edited => {
                                root.search-query = self.text;
                                root.search-changed(self.text);
                            }
                        }
                    }
                }
                
                // Main categories
                main-categories := VerticalLayout {
                    spacing: 4px;
                    
                    // All Books
                    CategoryButton {
                        category-id: "all";
                        category-name: "All Books";
                        category-icon: "📚";
                        category-count: stats.total_books;
                        is-selected: root.selected-category == "all";
                        
                        clicked => {
                            root.selected-category = "all";
                            root.category-selected("all");
                        }
                    }
                    
                    // Want to Read
                    CategoryButton {
                        category-id: "want-to-read";
                        category-name: "Want to Read";
                        category-icon: "📚";
                        category-count: stats.want_to_read;
                        is-selected: root.selected-category == "want-to-read";
                        
                        clicked => {
                            root.selected-category = "want-to-read";
                            root.category-selected("want-to-read");
                        }
                    }
                    
                    // Currently Reading
                    CategoryButton {
                        category-id: "currently-reading";
                        category-name: "Currently Reading";
                        category-icon: "📖";
                        category-count: stats.currently_reading;
                        is-selected: root.selected-category == "currently-reading";
                        
                        clicked => {
                            root.selected-category = "currently-reading";
                            root.category-selected("currently-reading");
                        }
                    }
                    
                    // Finished
                    CategoryButton {
                        category-id: "finished";
                        category-name: "Finished";
                        category-icon: "✅";
                        category-count: stats.finished;
                        is-selected: root.selected-category == "finished";
                        
                        clicked => {
                            root.selected-category = "finished";
                            root.category-selected("finished");
                        }
                    }
                }
                
                // Separator
                Rectangle {
                    height: 1px;
                    background: ReadingThemes.border-color;
                    margin: 8px 0px;
                }
                
                // Collections section
                collections-section := VerticalLayout {
                    spacing: 4px;
                    
                    // Collections header
                    collections-header := Rectangle {
                        height: 32px;
                        background: collections-header-area.has-hover ? ReadingThemes.hover-background : transparent;
                        border-radius: 4px;
                        
                        HorizontalLayout {
                            padding-left: 8px;
                            padding-right: 8px;
                            padding-top: 4px;
                            padding-bottom: 4px;
                            spacing: 8px;
                            alignment: center;
                            
                            Text {
                                text: collections-expanded ? "▼" : "▶";
                                font-size: 12px;
                                color: ReadingThemes.text-secondary;
                            }
                            
                            Text {
                                text: "Collections";
                                font-size: 14px;
                                font-weight: 600;
                                color: ReadingThemes.text-color;
                                horizontal-stretch: 1;
                            }
                            
                            if stats.total_collections > 0: Text {
                                text: stats.total_collections;
                                font-size: 12px;
                                color: ReadingThemes.text-secondary;
                            }
                            
                            // Add collection button
                            add-collection-btn := Rectangle {
                                width: 20px;
                                height: 20px;
                                background: add-collection-area.has-hover ? ReadingThemes.accent-color : transparent;
                                border-radius: 10px;
                                
                                Text {
                                    text: "+";
                                    font-size: 14px;
                                    color: add-collection-area.has-hover ? #FFFFFF : ReadingThemes.text-tertiary;
                                    horizontal-alignment: center;
                                    vertical-alignment: center;
                                }
                                
                                add-collection-area := TouchArea {
                                    clicked => {
                                        root.create-collection();
                                    }
                                    mouse-cursor: pointer;
                                }
                                
                                animate background {
                                    duration: 150ms;
                                    easing: ease-out;
                                }
                            }
                        }
                        
                        collections-header-area := TouchArea {
                            clicked => {
                                root.collections-expanded = !root.collections-expanded;
                                root.toggle-section("collections");
                            }
                            mouse-cursor: pointer;
                        }
                        
                        animate background {
                            duration: 150ms;
                            easing: ease-out;
                        }
                    }
                    
                    // Collections list
                    if collections-expanded: collections-list := VerticalLayout {
                        spacing: 2px;
                        padding-left: 16px;
                        
                        for collection in collections: CollectionButton {
                            collection-data: collection;
                            is-selected: root.selected-category == "collection:" + collection.id;
                            
                            clicked => {
                                root.selected-category = "collection:" + collection.id;
                                root.collection-selected(collection.id);
                            }
                            
                            edit-requested => {
                                root.edit-collection(collection.id);
                            }
                            
                            delete-requested => {
                                root.delete-collection(collection.id);
                            }
                            
                            favorite-toggled => {
                                root.toggle-collection-favorite(collection.id);
                            }
                        }
                        
                        // Empty state
                        if collections.length == 0: empty-collections := Rectangle {
                            height: 32px;
                            background: ReadingThemes.surface;
                            border-radius: 4px;
                            
                            Text {
                                text: "No collections yet";
                                font-size: 12px;
                                color: ReadingThemes.text-secondary;
                                horizontal-alignment: center;
                                vertical-alignment: center;
                                font-style: italic;
                            }
                        }
                    }
                }
                
                // Authors section
                authors-section := VerticalLayout {
                    spacing: 4px;
                    
                    // Authors header
                    authors-header := Rectangle {
                        height: 32px;
                        background: authors-header-area.has-hover ? ReadingThemes.hover-background : transparent;
                        border-radius: 4px;
                        
                        HorizontalLayout {
                            padding-left: 8px;
                            padding-right: 8px;
                            padding-top: 4px;
                            padding-bottom: 4px;
                            spacing: 8px;
                            alignment: center;
                            
                            Text {
                                text: authors-expanded ? "▼" : "▶";
                                font-size: 12px;
                                color: ReadingThemes.text-secondary;
                            }
                            
                            Text {
                                text: "Authors";
                                font-size: 14px;
                                font-weight: 600;
                                color: ReadingThemes.text-color;
                                horizontal-stretch: 1;
                            }
                            
                            if stats.total_authors > 0: Text {
                                text: stats.total_authors;
                                font-size: 12px;
                                color: ReadingThemes.text-secondary;
                            }
                        }
                        
                        authors-header-area := TouchArea {
                            clicked => {
                                root.authors-expanded = !root.authors-expanded;
                                root.toggle-section("authors");
                            }
                            mouse-cursor: pointer;
                        }
                        
                        animate background {
                            duration: 150ms;
                            easing: ease-out;
                        }
                    }
                    
                    // Authors list (show first 10)
                    if authors-expanded: authors-list := VerticalLayout {
                        spacing: 2px;
                        padding-left: 16px;
                        
                        for author[i] in authors: if i < 10: AuthorButton {
                            author-data: author;
                            is-selected: root.selected-category == "author:" + author.id;
                            
                            clicked => {
                                root.selected-category = "author:" + author.id;
                                root.author-selected(author.id);
                            }
                        }
                        
                        // Show more button
                        if authors.length > 10: show-more-authors := Rectangle {
                            height: 28px;
                            background: show-more-authors-area.has-hover ? ReadingThemes.hover-background : transparent;
                            border-radius: 4px;
                            
                            Text {
                                text: "Show " + (authors.length - 10) + " more...";
                                font-size: 11px;
                                color: ReadingThemes.text-secondary;
                                horizontal-alignment: center;
                                vertical-alignment: center;
                                font-style: italic;
                            }
                            
                            show-more-authors-area := TouchArea {
                                clicked => {
                                    // TODO: Implement show more authors
                                }
                                mouse-cursor: pointer;
                            }
                            
                            animate background {
                                duration: 150ms;
                                easing: ease-out;
                            }
                        }
                    }
                }
                
                // Tags section
                tags-section := VerticalLayout {
                    spacing: 4px;
                    
                    // Tags header
                    tags-header := Rectangle {
                        height: 32px;
                        background: tags-header-area.has-hover ? ReadingThemes.hover-background : transparent;
                        border-radius: 4px;
                        
                        HorizontalLayout {
                            padding-left: 8px;
                            padding-right: 8px;
                            padding-top: 4px;
                            padding-bottom: 4px;
                            spacing: 8px;
                            alignment: center;
                            
                            Text {
                                text: tags-expanded ? "▼" : "▶";
                                font-size: 12px;
                                color: ReadingThemes.text-secondary;
                            }
                            
                            Text {
                                text: "Tags";
                                font-size: 14px;
                                font-weight: 600;
                                color: ReadingThemes.text-color;
                                horizontal-stretch: 1;
                            }
                            
                            if stats.total_tags > 0: Text {
                                text: stats.total_tags;
                                font-size: 12px;
                                color: ReadingThemes.text-secondary;
                            }
                        }
                        
                        tags-header-area := TouchArea {
                            clicked => {
                                root.tags-expanded = !root.tags-expanded;
                                root.toggle-section("tags");
                            }
                            mouse-cursor: pointer;
                        }
                        
                        animate background {
                            duration: 150ms;
                            easing: ease-out;
                        }
                    }
                    
                    // Tags list (show first 15)
                    if tags-expanded: tags-list := VerticalLayout {
                        spacing: 2px;
                        padding-left: 16px;
                        
                        for tag[i] in tags: if i < 15: TagButton {
                            tag-data: tag;
                            is-selected: root.selected-category == "tag:" + tag.id;
                            
                            clicked => {
                                root.selected-category = "tag:" + tag.id;
                                root.tag-selected(tag.id);
                            }
                        }
                        
                        // Show more button
                        if tags.length > 15: show-more-tags := Rectangle {
                            height: 28px;
                            background: show-more-tags-area.has-hover ? ReadingThemes.hover-background : transparent;
                            border-radius: 4px;
                            
                            Text {
                                text: "Show " + (tags.length - 15) + " more...";
                                font-size: 11px;
                                color: ReadingThemes.text-secondary;
                                horizontal-alignment: center;
                                vertical-alignment: center;
                                font-style: italic;
                            }
                            
                            show-more-tags-area := TouchArea {
                                clicked => {
                                    // TODO: Implement show more tags
                                }
                                mouse-cursor: pointer;
                            }
                            
                            animate background {
                                duration: 150ms;
                                easing: ease-out;
                            }
                        }
                    }
                }
                
                // Footer spacer
                Rectangle {
                    height: 20px;
                }
            }
        }
        
        // Collapsed state icons
        if !expanded: collapsed-icons := VerticalLayout {
            padding-left: 8px;
            padding-right: 8px;
            padding-top: 12px;
            padding-bottom: 12px;
            spacing: 16px;
            
            // All Books
            collapsed-icon := Rectangle {
                width: 44px;
                height: 44px;
                background: collapsed-all-area.has-hover ? ReadingThemes.hover-background : transparent;
                border-radius: 8px;
                
                Text {
                    text: "📚";
                    font-size: 20px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
                
                collapsed-all-area := TouchArea {
                    clicked => {
                        root.selected-category = "all";
                        root.category-selected("all");
                    }
                    mouse-cursor: pointer;
                }
                
                animate background {
                    duration: 150ms;
                    easing: ease-out;
                }
            }
            
            // Currently Reading
            collapsed-icon-reading := Rectangle {
                width: 44px;
                height: 44px;
                background: collapsed-reading-area.has-hover ? ReadingThemes.hover-background : transparent;
                border-radius: 8px;
                
                Text {
                    text: "📖";
                    font-size: 20px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
                
                collapsed-reading-area := TouchArea {
                    clicked => {
                        root.selected-category = "currently-reading";
                        root.category-selected("currently-reading");
                    }
                    mouse-cursor: pointer;
                }
                
                animate background {
                    duration: 150ms;
                    easing: ease-out;
                }
            }
            
            // Collections
            collapsed-icon-collections := Rectangle {
                width: 44px;
                height: 44px;
                background: collapsed-collections-area.has-hover ? ReadingThemes.hover-background : transparent;
                border-radius: 8px;
                
                Text {
                    text: "📂";
                    font-size: 20px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
                
                collapsed-collections-area := TouchArea {
                    clicked => {
                        root.expanded = true;
                        root.collections-expanded = true;
                    }
                    mouse-cursor: pointer;
                }
                
                animate background {
                    duration: 150ms;
                    easing: ease-out;
                }
            }
        }
    }
}

// Category button component
component CategoryButton inherits Rectangle {
    in property <string> category-id;
    in property <string> category-name;
    in property <string> category-icon;
    in property <int> category-count;
    in property <bool> is-selected;
    
    callback clicked();
    
    height: 36px;
    background: is-selected ? ReadingThemes.accent-color : 
                (touch-area.has-hover ? ReadingThemes.hover-background : transparent);
    border-radius: 6px;
    
    HorizontalLayout {
        padding-left: 12px;
        padding-right: 12px;
        padding-top: 8px;
        padding-bottom: 8px;
        spacing: 8px;
        alignment: center;
        
        Text {
            text: category-icon;
            font-size: 14px;
        }
        
        Text {
            text: category-name;
            font-size: 13px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-color;
            horizontal-stretch: 1;
        }
        
        if category-count > 0: count-badge := Rectangle {
            width: count-text.preferred-width + 12px;
            height: 20px;
            background: is-selected ? rgba(255, 255, 255, 0.2) : ReadingThemes.accent-color;
            border-radius: 10px;
            
            count-text := Text {
                text: category-count;
                font-size: 11px;
                color: #FFFFFF;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }
    }
    
    touch-area := TouchArea {
        clicked => {
            root.clicked();
        }
        mouse-cursor: pointer;
    }
    
    animate background {
        duration: 150ms;
        easing: ease-out;
    }
}

// Collection button component
component CollectionButton inherits Rectangle {
    in property <CollectionItem> collection-data;
    in property <bool> is-selected;
    
    callback clicked();
    callback edit-requested();
    callback delete-requested();
    callback favorite-toggled();
    
    property <bool> hovered: touch-area.has-hover;
    
    height: 32px;
    background: is-selected ? ReadingThemes.accent-color : 
                (hovered ? ReadingThemes.hover-background : transparent);
    border-radius: 4px;
    
    HorizontalLayout {
        padding-left: 8px;
        padding-right: 8px;
        padding-top: 6px;
        padding-bottom: 6px;
        spacing: 6px;
        alignment: center;
        
        // Color indicator
        color-indicator := Rectangle {
            width: 12px;
            height: 12px;
            background: collection-data.color;
            border-radius: 6px;
        }
        
        Text {
            text: collection-data.icon;
            font-size: 12px;
        }
        
        Text {
            text: collection-data.name;
            font-size: 12px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-color;
            horizontal-stretch: 1;
            overflow: elide;
        }
        
        if collection-data.is-smart: smart-indicator := Text {
            text: "⚡";
            font-size: 10px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-secondary;
        }
        
        if collection-data.count > 0: count-text := Text {
            text: collection-data.count;
            font-size: 10px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-secondary;
        }
        
        // Action buttons (visible on hover)
        if hovered && !is-selected: actions := HorizontalLayout {
            spacing: 2px;
            
            // Favorite button
            favorite-btn := Rectangle {
                width: 16px;
                height: 16px;
                background: favorite-area.has-hover ? ReadingThemes.accent-color : transparent;
                border-radius: 8px;
                
                Text {
                    text: collection-data.is-favorite ? "★" : "☆";
                    font-size: 10px;
                    color: favorite-area.has-hover ? #FFFFFF : ReadingThemes.text-secondary;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
                
                favorite-area := TouchArea {
                    clicked => {
                        root.favorite-toggled();
                    }
                    mouse-cursor: pointer;
                }
                
                animate background {
                    duration: 150ms;
                    easing: ease-out;
                }
            }
            
            // Edit button
            edit-btn := Rectangle {
                width: 16px;
                height: 16px;
                background: edit-area.has-hover ? ReadingThemes.accent-color : transparent;
                border-radius: 8px;
                
                Text {
                    text: "✏️";
                    font-size: 8px;
                    color: edit-area.has-hover ? #FFFFFF : ReadingThemes.text-secondary;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
                
                edit-area := TouchArea {
                    clicked => {
                        root.edit-requested();
                    }
                    mouse-cursor: pointer;
                }
                
                animate background {
                    duration: 150ms;
                    easing: ease-out;
                }
            }
        }
    }
    
    touch-area := TouchArea {
        clicked => {
            root.clicked();
        }
        mouse-cursor: pointer;
    }
    
    animate background {
        duration: 150ms;
        easing: ease-out;
    }
}

// Author button component
component AuthorButton inherits Rectangle {
    in property <AuthorItem> author-data;
    in property <bool> is-selected;
    
    callback clicked();
    
    height: 28px;
    background: is-selected ? ReadingThemes.accent-color : 
                (touch-area.has-hover ? ReadingThemes.hover-background : transparent);
    border-radius: 4px;
    
    HorizontalLayout {
        padding: 4px 8px;
        spacing: 6px;
        alignment: center;
        
        Text {
            text: "👤";
            font-size: 11px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-secondary;
        }
        
        Text {
            text: author-data.name;
            font-size: 11px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-color;
            horizontal-stretch: 1;
            overflow: elide;
        }
        
        if author-data.count > 0: count-text := Text {
            text: author-data.count;
            font-size: 10px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-secondary;
        }
    }
    
    touch-area := TouchArea {
        clicked => {
            root.clicked();
        }
        mouse-cursor: pointer;
    }
    
    animate background {
        duration: 150ms;
        easing: ease-out;
    }
}

// Tag button component
component TagButton inherits Rectangle {
    in property <TagItem> tag-data;
    in property <bool> is-selected;
    
    callback clicked();
    
    height: 26px;
    background: is-selected ? ReadingThemes.accent-color : 
                (touch-area.has-hover ? ReadingThemes.hover-background : transparent);
    border-radius: 4px;
    
    HorizontalLayout {
        padding: 4px 8px;
        spacing: 6px;
        alignment: center;
        
        // Tag color indicator
        tag-color := Rectangle {
            width: 8px;
            height: 8px;
            background: tag-data.color;
            border-radius: 4px;
        }
        
        Text {
            text: tag-data.name;
            font-size: 10px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-color;
            horizontal-stretch: 1;
            overflow: elide;
        }
        
        if tag-data.count > 0: count-text := Text {
            text: tag-data.count;
            font-size: 9px;
            color: is-selected ? #FFFFFF : ReadingThemes.text-secondary;
        }
    }
    
    touch-area := TouchArea {
        clicked => {
            root.clicked();
        }
        mouse-cursor: pointer;
    }
    
    animate background {
        duration: 150ms;
        easing: ease-out;
    }
}