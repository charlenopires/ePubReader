// Reading themes for the ebook reader

export global ReadingThemes {
    // Current theme properties
    out property <color> background-color: #FFFFFF;
    out property <color> text-color: #000000;
    out property <color> accent-color: #007AFF;
    out property <color> link-color: #007AFF;
    out property <color> selection-color: #B3D9FF;
    out property <color> highlight-color: #FFD700;
    out property <color> note-color: #87CEEB;
    out property <color> border-color: #E0E0E0;
    out property <color> header-color: #F5F5F5;
    
    // Typography properties
    out property <int> font-size: 16;
    out property <float> line-height: 1.5;
    out property <string> font-family: "Default";
    out property <int> font-weight: 400;
    out property <float> letter-spacing: 0.0;
    out property <float> paragraph-spacing: 1.2;
    
    // Layout properties
    out property <float> brightness: 1.0;
    out property <float> contrast: 1.0;
    out property <float> shadow-intensity: 0.0;
    out property <length> margin-horizontal: 40px;
    out property <length> margin-vertical: 40px;
    out property <length> reading-width: 700px;
    out property <bool> two-column-mode: false;
    
    // Current theme name
    in-out property <string> current-theme: "original";
    
    // Theme switching callback
    callback switch-theme(string);
    
    // Apply theme function
    switch-theme(theme-name) => {
        current-theme = theme-name;
        
        if (theme-name == "original") {
            // Original: Traditional white background, black text
            background-color = #FFFFFF;
            text-color = #000000;
            accent-color = #007AFF;
            link-color = #007AFF;
            selection-color = #B3D9FF;
            highlight-color = #FFD700;
            note-color = #87CEEB;
            border-color = #E0E0E0;
            header-color = #F5F5F5;
            font-weight = 400;
            letter-spacing = 0.0;
            paragraph-spacing = 1.2;
            shadow-intensity = 0.0;
            brightness = 1.0;
            contrast = 1.0;
        } else if (theme-name == "quiet") {
            // Quiet: Light gray background, dark gray text, low contrast
            background-color = #F8F8F8;
            text-color = #444444;
            accent-color = #666666;
            link-color = #555555;
            selection-color = #DDDDDD;
            highlight-color = #E8E8E8;
            note-color = #D0D0D0;
            border-color = #CCCCCC;
            header-color = #EEEEEE;
            font-weight = 300;
            letter-spacing = 0.2;
            paragraph-spacing = 1.4;
            shadow-intensity = 0.1;
            brightness = 0.9;
            contrast = 0.8;
        } else if (theme-name == "paper") {
            // Paper: Beige/sepia background, brown text, vintage paper look
            background-color = #F7F3E9;
            text-color = #2F2920;
            accent-color = #8B4513;
            link-color = #A0522D;
            selection-color = #E6D7C3;
            highlight-color = #F0E68C;
            note-color = #DEB887;
            border-color = #D2B48C;
            header-color = #F0EBD8;
            font-weight = 400;
            letter-spacing = 0.3;
            paragraph-spacing = 1.3;
            shadow-intensity = 0.2;
            brightness = 0.95;
            contrast = 0.9;
        } else if (theme-name == "bold") {
            // Bold: High contrast, large fonts, accessibility focused
            background-color = #FFFFFF;
            text-color = #000000;
            accent-color = #FF0000;
            link-color = #0000FF;
            selection-color = #FFFF00;
            highlight-color = #FF6347;
            note-color = #00CED1;
            border-color = #000000;
            header-color = #F0F0F0;
            font-weight = 700;
            letter-spacing = 0.5;
            paragraph-spacing = 1.6;
            shadow-intensity = 0.3;
            brightness = 1.1;
            contrast = 1.3;
        } else if (theme-name == "calm") {
            // Calm: Light blue background, dark blue text, relaxing
            background-color = #F0F8FF;
            text-color = #1E3A8A;
            accent-color = #3B82F6;
            link-color = #2563EB;
            selection-color = #DBEAFE;
            highlight-color = #93C5FD;
            note-color = #BFDBFE;
            border-color = #C3DDFD;
            header-color = #EBF4FF;
            font-weight = 350;
            letter-spacing = 0.1;
            paragraph-spacing = 1.4;
            shadow-intensity = 0.1;
            brightness = 0.95;
            contrast = 0.9;
        } else if (theme-name == "focus") {
            // Focus: Dark mode, black background, white text
            background-color = #000000;
            text-color = #FFFFFF;
            accent-color = #00FF00;
            link-color = #00BFFF;
            selection-color = #333333;
            highlight-color = #FFD700;
            note-color = #FF69B4;
            border-color = #444444;
            header-color = #111111;
            font-weight = 400;
            letter-spacing = 0.2;
            paragraph-spacing = 1.5;
            shadow-intensity = 0.0;
            brightness = 1.0;
            contrast = 1.2;
        }
    }
    
    // Font size adjustment
    function adjust-font-size(size: int) {
        font-size = max(12, min(32, size));
    }
    
    // Line height adjustment
    function adjust-line-height(height: float) {
        line-height = max(1.0, min(3.0, height));
    }
    
    // Brightness adjustment
    function adjust-brightness(bright: float) {
        brightness = max(0.3, min(1.5, bright));
    }
    
    // Contrast adjustment
    function adjust-contrast(cont: float) {
        contrast = max(0.5, min(2.0, cont));
    }
    
    // Font family change
    function change-font-family(family: string) {
        font-family = family;
    }
    
    // Toggle two-column mode
    function toggle-two-column() {
        two-column-mode = !two-column-mode;
    }
    
    // Adjust margins
    function adjust-margins(horizontal: length, vertical: length) {
        margin-horizontal = max(20px, min(120px, horizontal));
        margin-vertical = max(20px, min(80px, vertical));
    }
    
    // Adjust reading width
    function adjust-reading-width(width: length) {
        reading-width = max(400px, min(1200px, width));
    }
}

// Theme preset component for theme selection
export component ThemePreset inherits Rectangle {
    in property <string> theme-name;
    in property <string> theme-display-name;
    in property <color> preview-bg;
    in property <color> preview-text;
    in property <bool> selected: false;
    
    callback theme-selected(string);
    
    width: 120px;
    height: 80px;
    
    background: preview-bg;
    border-width: selected ? 3px : 1px;
    border-color: selected ? ReadingThemes.accent-color : ReadingThemes.border-color;
    border-radius: 8px;
    
    animate border-width, border-color {
        duration: 200ms;
        easing: ease-out;
    }
    
    VerticalLayout {
        alignment: center;
        spacing: 8px;
        
        // Preview text
        Text {
            text: "Aa";
            color: preview-text;
            font-size: 18px;
            font-weight: 600;
            horizontal-alignment: center;
        }
        
        // Theme name
        Text {
            text: theme-display-name;
            color: preview-text;
            font-size: 10px;
            font-weight: 500;
            horizontal-alignment: center;
        }
        
        // Small preview lines
        Rectangle {
            width: 60px;
            height: 2px;
            background: preview-text;
            opacity: 0.6;
        }
        
        Rectangle {
            width: 40px;
            height: 2px;
            background: preview-text;
            opacity: 0.4;
        }
    }
    
    touch-area := TouchArea {
        clicked => {
            root.theme-selected(theme-name);
        }
        mouse-cursor: pointer;
    }
    
    // Hover effect
    property <bool> hovered: touch-area.has-hover;
    
    animate opacity {
        duration: 150ms;
        easing: ease-out;
    }
    
    opacity: hovered ? 0.8 : 1.0;
}